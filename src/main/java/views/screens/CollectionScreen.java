/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.screens;

import models.ListOfCollections;
import models.Collection;
import views.logscreens.BlogLogScreen;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;


/**
 *
 * @author Nam
 */
public class CollectionScreen extends Screen {

    public CollectionScreen() {
        super();
        this.currentCollectionList = this.collectionList;
        display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    @Override
    public void initOptionalComponent() {
        setHeader("COLLECTION");
        btnTim = new javax.swing.JButton();
        tablePane = new javax.swing.JScrollPane();
        tCollection = new javax.swing.JTable();
        tfTim = new javax.swing.JTextField();
        btnSapXep = new javax.swing.JButton();
        cbAscendingDescending = new javax.swing.JComboBox<>();
        cbTheo = new javax.swing.JComboBox<>();

        btnTim.setBackground(new java.awt.Color(0, 51, 51));
        btnTim.setForeground(new java.awt.Color(255, 255, 255));
        btnTim.setText("Tìm theo tên");
        btnTim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimMouseClicked(evt);
            }
        });
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        tCollection.setForeground(new java.awt.Color(0, 102, 102));
        tCollection.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Name", "Volume", "Change", "Floor price", "Owners", "Items"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tCollection.setGridColor(new java.awt.Color(188, 206, 206));
        tCollection.setRowHeight(26);
        tCollection.setSelectionBackground(new java.awt.Color(0, 102, 102));
        tCollection.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tCollection.setShowGrid(true);
        tCollection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tCollectionMouseClicked(evt);
            }
        });
        tablePane.setViewportView(tCollection);

        tfTim.setForeground(new java.awt.Color(0, 102, 102));
        tfTim.setText("Nhập thông tin");
        tfTim.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        tfTim.setSelectedTextColor(new java.awt.Color(102, 102, 102));

        btnSapXep.setBackground(new java.awt.Color(0, 51, 51));
        btnSapXep.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXep.setText("Sắp xếp theo");
        btnSapXep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSapXepMouseClicked(evt);
            }
        });
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        cbAscendingDescending.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending floor price", "Descending floor price", "Ascending volume", "Descending volume", "Ascending change", "Descending change", " " }));

        cbTheo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo 1 giờ", "Theo 6 giờ", "Theo 1 ngày", "Theo 7 ngày", "Theo 1 tháng", "Tất cả", " ", " ", " " }));
    }

    private void tCollectionMouseClicked(java.awt.event.MouseEvent evt) {
        DefaultTableModel model = (DefaultTableModel)tCollection.getModel();
        int indexRow = tCollection.getSelectedRow();
        String nameOfCollection = String.valueOf(model.getValueAt(indexRow, 0).toString());
        Collection collectionSelected = this.collectionList.search(nameOfCollection).get(0);
        BlogLogScreen blogLogScreen = new BlogLogScreen(collectionSelected);
        blogLogScreen.setVisible(true);
    }

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnTimMouseClicked(java.awt.event.MouseEvent evt) {
//       TODO add your handling code here:
        // backend search và trả về một list of collection
        List<Collection> collectionListCollectionByName = currentCollectionList.search(tfTim.getText());
        // update currentCollectionList

        // display currentCollectionList
        DefaultTableModel defaultTableModel = (DefaultTableModel) tCollection.getModel();
        defaultTableModel.getDataVector().removeAllElements();
        defaultTableModel.fireTableDataChanged();

        for(Collection collection: collectionListCollectionByName){
            String data[] = {collection.getName(), collection.getVolume(), collection.getChange(), collection.getFloorPrice(), collection.getOwners(), collection.getItems()};
            defaultTableModel.addRow(data);
        }
    }

    // -------------------- BACK TO MAIN FORM ----------------------------
    private void lbThoatMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        this.dispose();
    }


    private void btnSapXepMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        display();
    }

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }

    // ------------ START TO CODE HERE -----------------

    // ------------- DISPLAY PEOPLE ---------------------
    private void display(){
        String firstItem = cbTheo.getSelectedItem().toString();
        String secondItem = cbAscendingDescending.getSelectedItem().toString();
        System.out.println(secondItem);
        // ------- xử lý input first item -------
        int index = 0;
        if (firstItem.equals("Theo 1 giờ")){
            index = 0;
        } else if (firstItem.equals("Theo 6 giờ")){
            index = 1;
        } else if (firstItem.equals("Theo 1 ngày")) {
            index = 2;
        } else if (firstItem.equals("Theo 7 ngày")) {
            index = 3;
        } else if (firstItem.equals("Theo 1 tháng")) {
            index = 4;
        } else if (firstItem.equals("Tất cả")) {
            index = 5;
        }
        this.currentCollectionList.setCollectionList(this.collectionListArray[index]);
        // -----------------------------------

        // -------- xử lý input thứ 2 ---------
        if (secondItem.equals("Ascending floor price")){
            this.currentCollectionList.sortCollectionByFloorPriceASC();
        } else if (secondItem.equals("Descending floor price")){
            this.currentCollectionList.sortCollectionByFloorPriceDES();
        } else if (secondItem.equals("Ascending volume")) {
            this.currentCollectionList.sortCollectionByVolumeASC();
        } else if (secondItem.equals("Descending volume")) {
            this.currentCollectionList.sortCollectionByVolumeDES();
        } else if (secondItem.equals("Ascending change")) {
            this.currentCollectionList.sortCollectionByChangeASC();
        } else if (secondItem.equals("Descending change")) {
            this.currentCollectionList.sortCollectionByChangeDES();
        }
        // ------------------------------------

        // --------- Display section ----------
        DefaultTableModel defaultTableModel = (DefaultTableModel) tCollection.getModel();
        defaultTableModel.getDataVector().removeAllElements();
        defaultTableModel.fireTableDataChanged();

        for(Collection collection: currentCollectionList.getCollectionList()){
            String data[] = {collection.getName(), collection.getVolume(), collection.getChange(), collection.getFloorPrice(), collection.getOwners(), collection.getItems()};
            defaultTableModel.addRow(data);
        }
    }
    private Collection collection;
    private final ListOfCollections collectionList = new ListOfCollections();
    private final List<Collection> []collectionListArray = collectionList.getTop100Collection();
    private ListOfCollections currentCollectionList;

    // Pane table
    public JScrollPane tablePane() {
        return tablePane;
    };

    // Group for optional component
    public GroupLayout.SequentialGroup horizontalOptionalGroup(
            GroupLayout mainPanelLayout) {
        return mainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnSapXep, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbAscendingDescending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 236, Short.MAX_VALUE)
                .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfTim, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44);
    };

    // Group for optional component
    public GroupLayout.ParallelGroup verticalOptionalGroup(
            GroupLayout mainPanelLayout) {
        return mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSapXep)
                        .addComponent(cbAscendingDescending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnTim)
                        .addComponent(cbTheo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));
    };


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CollectionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CollectionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CollectionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CollectionScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CollectionScreen().setVisible(true);
            }
        });
    }
    
    // 

    // Variables declaration - do not modify
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnTim;
    private javax.swing.JComboBox<String> cbAscendingDescending;
    private javax.swing.JComboBox<String> cbTheo;
    private javax.swing.JScrollPane tablePane;
    private javax.swing.JTable tCollection;
    private javax.swing.JTextField tfTim;
    // End of variables declaration
}
